{
	"name": "Morph",
	"scopeName": "source.morph",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#interpolated_string"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#function_calls"
		},
		{
			"include": "#variables"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.line.double-slash.morph",
					"match": "//.*$"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "storage.modifier.morph",
					"match": "\\bin\\b"
				},
				{
					"name": "keyword.control.morph",
					"match": "\\bvar\\b"
				},
				{
					"name": "support.type.morph",
					"match": "\\b(Json|Url)\\b"
				},
				{
					"name": "keyword.declaration.class.morph",
					"match": "\\bclass\\b"
				},
				{
					"name": "entity.name.function.constructor.morph",
					"match": "\\binit\\b"
				},
				{
					"name": "variable.language.this.morph",
					"match": "\\bthis\\b"
				},
				{
					"name": "keyword.declaration.function.morph",
					"match": "\\bfun\\b"
				}
			]
		},
		"variables": {
			"patterns": [
				{
					"name": "variable.other.morph",
					"match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.double.morph",
					"begin": "\"",
					"end": "\"",
					"patterns": [
						{
							"name": "constant.character.escape.morph",
							"match": "\\\\."
						}
					]
				}
			]
		},
		"interpolated_string": {
			"patterns": [
				{
					"name": "string.interpolated.morph",
					"begin": "\\$\"",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.morph"
						}
					},
					"end": "\"",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.morph"
						}
					},
					"patterns": [
						{
							"name": "constant.character.escape.morph",
							"match": "\\\\."
						},
						{
							"name": "meta.interpolation.morph",
							"begin": "\\[",
							"beginCaptures": {
								"0": {
									"name": "punctuation.section.interpolation.begin.morph"
								}
							},
							"end": "\\]",
							"endCaptures": {
								"0": {
									"name": "punctuation.section.interpolation.end.morph"
								}
							},
							"patterns": [
								{
									"include": "#variables"
								}
							]
						}
					]
				}
			]
		},
		"numbers": {
			"patterns": [
				{
					"name": "constant.numeric.morph",
					"match": "\\b\\d+(\\.\\d+)?\\b"
				}
			]
		},
		"function_calls": {
			"patterns": [
				{
					"name": "meta.function-call.morph",
					"match": "\\b([A-Z][a-zA-Z0-9_]*)\\s*\\(",
					"captures": {
						"1": {
							"name": "support.function.morph"
						}
					}
				}
			]
		}
	},
	"fileTypes": [
		"mor"
	]
}